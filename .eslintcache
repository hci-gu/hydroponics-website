[{"/Users/xandse/Documents/code/work/gu/hydroponics-website/src/index.js":"1","/Users/xandse/Documents/code/work/gu/hydroponics-website/src/api.js":"2","/Users/xandse/Documents/code/work/gu/hydroponics-website/src/Home.js":"3","/Users/xandse/Documents/code/work/gu/hydroponics-website/src/Admin.js":"4","/Users/xandse/Documents/code/work/gu/hydroponics-website/src/components/Plant.js":"5","/Users/xandse/Documents/code/work/gu/hydroponics-website/src/components/ImageDisplayer.js":"6"},{"size":537,"mtime":1608216661204,"results":"7","hashOfConfig":"8"},{"size":886,"mtime":1608217965557,"results":"9","hashOfConfig":"8"},{"size":1032,"mtime":1608217677692,"results":"10","hashOfConfig":"8"},{"size":1401,"mtime":1608217662339,"results":"11","hashOfConfig":"8"},{"size":3356,"mtime":1608218097758,"results":"12","hashOfConfig":"8"},{"size":333,"mtime":1608217711927,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11tn7gv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/xandse/Documents/code/work/gu/hydroponics-website/src/index.js",[],["30","31"],"/Users/xandse/Documents/code/work/gu/hydroponics-website/src/api.js",[],"/Users/xandse/Documents/code/work/gu/hydroponics-website/src/Home.js",["32"],"import React, { useEffect, useState } from 'react'\n\nimport styled from 'styled-components'\nimport { getPlants, getImages } from './api'\nimport ImageDisplayer from './components/ImageDisplayer'\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\nconst PlantsContainer = styled.div`\n  margin: 50px auto;\n  width: 80%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n`\n\nfunction App() {\n  const [images, setImages] = useState([])\n  const [plants, setPlants] = useState([])\n  useEffect(() => {\n    const getData = async () => {\n      const [_images, _plants] = await Promise.all([getImages(), getPlants()])\n      setImages(_images)\n      setPlants(_plants)\n    }\n    getData()\n  }, [])\n\n  return (\n    <Root>\n      <PlantsContainer>\n        {plants.map((plant) => (\n          <ImageDisplayer plant={plant} images={images} />\n        ))}\n      </PlantsContainer>\n    </Root>\n  )\n}\n\nexport default App\n","/Users/xandse/Documents/code/work/gu/hydroponics-website/src/Admin.js",["33"],"import React, { useEffect, useState } from 'react'\n\nimport styled from 'styled-components'\nimport { getPlants, getImages } from './api'\nimport Plant from './components/Plant'\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\n\nconst Image = styled.div`\n  border: 1px solid black;\n  padding: 10px;\n  margin: 10px;\n\n  display: flex;\n  flex-direction: column;\n\n  > img {\n    width: 200px;\n    height: 100px;\n  }\n`\n\nconst PlantsContainer = styled.div`\n  margin: 50px auto;\n  width: 80%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n`\n\nfunction App() {\n  const [images, setImages] = useState([])\n  const [plants, setPlants] = useState([])\n  useEffect(() => {\n    const getData = async () => {\n      const [_images, _plants] = await Promise.all([getImages(), getPlants()])\n      setImages(_images)\n      setPlants(_plants)\n    }\n    getData()\n  }, [])\n\n  return (\n    <Root>\n      <PlantsContainer>\n        {plants.map((plant) => (\n          <Plant plant={plant} />\n        ))}\n        <Plant />\n      </PlantsContainer>\n      <Container>\n        {images.map((image) => (\n          <Image>\n            <span>{image.imageTaken}</span>\n            <img src={image.imageUrl}></img>\n          </Image>\n        ))}\n      </Container>\n    </Root>\n  )\n}\n\nexport default App\n","/Users/xandse/Documents/code/work/gu/hydroponics-website/src/components/Plant.js",[],"/Users/xandse/Documents/code/work/gu/hydroponics-website/src/components/ImageDisplayer.js",["34","35","36"],"import { Card } from 'antd'\nimport moment from 'moment'\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n}\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n}\n\nconst Plant = ({ plant }) => {\n  return <Card title={`${plant.name} - ${plant.id}`}></Card>\n}\n\nexport default Plant\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":12,"column":7,"nodeType":"43","messageId":"44","endLine":12,"endColumn":16},{"ruleId":"45","severity":1,"message":"46","line":64,"column":13,"nodeType":"47","endLine":64,"endColumn":39},{"ruleId":"41","severity":1,"message":"48","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":14},{"ruleId":"41","severity":1,"message":"49","line":4,"column":7,"nodeType":"43","messageId":"44","endLine":4,"endColumn":13},{"ruleId":"41","severity":1,"message":"50","line":12,"column":7,"nodeType":"43","messageId":"44","endLine":12,"endColumn":17},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Container' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'moment' is defined but never used.","'layout' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]